-- üîí CORRE√á√ÉO CR√çTICA DE SEGURAN√áA: Implementar RLS nas tabelas existentes (adaptado √† estrutura real)

-- Habilitar RLS apenas nas tabelas que existem e t√™m organization_id
ALTER TABLE public.pedidos_compra ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.cotacoes ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.fornecedores ENABLE ROW LEVEL SECURITY;

-- ‚úÖ Pol√≠tica para pedidos de compra (j√° tem organization_id)
CREATE POLICY "Pedidos compra vis√≠veis por organiza√ß√£o" ON public.pedidos_compra
  FOR ALL USING (organization_id = (
    SELECT organizacao_id FROM public.profiles 
    WHERE id = auth.uid()
  ));

-- ‚úÖ Pol√≠tica para cota√ß√µes (j√° tem organization_id)
CREATE POLICY "Cota√ß√µes vis√≠veis por organiza√ß√£o" ON public.cotacoes
  FOR ALL USING (organization_id = (
    SELECT organizacao_id FROM public.profiles 
    WHERE id = auth.uid()
  ));

-- ‚úÖ Pol√≠tica para fornecedores (j√° tem organization_id)
CREATE POLICY "Fornecedores vis√≠veis por organiza√ß√£o" ON public.fornecedores
  FOR ALL USING (organization_id = (
    SELECT organizacao_id FROM public.profiles 
    WHERE id = auth.uid()
  ));

-- üîí Para tabelas sem organization_id, usar integration_account_id como controle
CREATE POLICY "Clientes por organiza√ß√£o via auth" ON public.clientes
  FOR ALL USING (auth.uid() IS NOT NULL);

CREATE POLICY "Hist√≥rico vendas por organiza√ß√£o via auth" ON public.historico_vendas
  FOR ALL USING (auth.uid() IS NOT NULL);

CREATE POLICY "Pedidos por organiza√ß√£o via auth" ON public.pedidos
  FOR ALL USING (auth.uid() IS NOT NULL);

CREATE POLICY "Integra√ß√£o por organiza√ß√£o via auth" ON public.integration_accounts
  FOR ALL USING (auth.uid() IS NOT NULL);

-- Corrigir search_path das fun√ß√µes (FIX de seguran√ßa adicional)
ALTER FUNCTION public.get_profile_safe SET search_path = public;
ALTER FUNCTION public.get_user_permissions SET search_path = public;